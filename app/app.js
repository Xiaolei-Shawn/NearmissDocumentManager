  (function () {    'use strict';    angular        .module('app', ['oc.lazyLoad','ui.router', 'ui.bootstrap','angular-loading-bar'])        .run(run)        .config(config);    config.$inject = ['$stateProvider','$urlRouterProvider','$ocLazyLoadProvider'];      function config($stateProvider,$urlRouterProvider,$ocLazyLoadProvider) {        $ocLazyLoadProvider.config({          debug:false,          events:true        });        // default route        $urlRouterProvider.otherwise("/");        $stateProvider            .state('dashboard', {                url: '/',                templateUrl: 'dashboard/main.html',                controller: 'Home.IndexController',                controllerAs: 'vm',                resolve: {                  loadMyDirectives:function($ocLazyLoad){                    return $ocLazyLoad.load(                {                    name:'app',                    files:[                    "directives/header/header.js",                    "directives/header/header-notification/header-notification.js",                    "directives/sidebar/sidebar-search/sidebar-search.js",                    "directives/sidebar/sidebar.js"                    ]                }),                $ocLazyLoad.load(                {                   name:'toggle-switch',                   files:["scripts/angular-toggle-switch.min.js",                          "styles/angular-toggle-switch.css"                      ]                }),                $ocLazyLoad.load(                {                  name:'ngAnimate',                  files:['scripts/angular-animate.js']                }),                $ocLazyLoad.load(                {                  name:'ngCookies',                  files:['scripts/angular-cookies.js']                }),                $ocLazyLoad.load(                {                  name:'ngResource',                  files:['scripts/angular-resource.js']                }),                $ocLazyLoad.load(                {                  name:'ngSanitize',                  files:['scripts/angular-sanitize.js']                }),                $ocLazyLoad.load(                {                  name:'ngTouch',                  files:['scripts/angular-touch.js']                })            }        }    })            .state('dashboard.home',{                url:'home',                templateUrl:'dashboard/home.html',                resolve: {                    loadMyFiles:function($ocLazyLoad) {                        return $ocLazyLoad.load({                            name:'app',                            files:[                                'directives/timeline/timeline.js',                                'directives/notifications/notifications.js',                                'directives/chat/chat.js',                                'directives/dashboard/stats/stats.js'                            ]                        })                    }                }            })             .state('dashboard.account',{                url:'account',                templateUrl:'view/account.html',                controller: 'Account.IndexController',                controllerAs: 'vm'            })            .state('dashboard.form',{                url:'form',                templateUrl:'view/form.html'            })        }      function run($http, $rootScope, $window) {        // add JWT token as default auth header        $http.defaults.headers.common['Authorization'] = 'Bearer ' + $window.jwtToken;        // update active tab on state change   /*   $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {            $rootScope.activeTab = toState.data.activeTab;        });*/    }    // manually bootstrap angular after the JWT token is retrieved from the server    $(function () {        // get JWT token from server        $.get('/app/token', function (token) {            window.jwtToken = token;            angular.bootstrap(document, ['app']);        });    });  })();