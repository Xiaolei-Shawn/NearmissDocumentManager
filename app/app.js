(function () {    'use strict';    angular        .module('app', ['oc.lazyLoad',            'ui.router',            'ui.bootstrap',            'angular-loading-bar',            'formly',            'formlyBootstrap'        ])        .run(run)        .config(config);    config.$inject = ['$stateProvider', '$urlRouterProvider', '$ocLazyLoadProvider'];    function config($stateProvider, $urlRouterProvider, $ocLazyLoadProvider) {        $ocLazyLoadProvider.config({            debug: false,            events: true        });        // default route        $urlRouterProvider.otherwise("home");        $stateProvider            .state('dashboard', {                url: '/',                templateUrl: 'dashboard/main.html',                controller: 'DashboardCtrl',                controllerAs: 'vm',                resolve: {                    loadMyDirectives: function ($ocLazyLoad) {                        return $ocLazyLoad.load(                            {                                name: 'app',                                files: [                                    "directives/header/header.js",                                    "directives/header/header-notification/header-notification.js",                                    "directives/sidebar/sidebar-search/sidebar-search.js",                                    "directives/sidebar/sidebar.js"                                ]                            }),                            $ocLazyLoad.load({                                name: 'toggle-switch',                                files: ["scripts/angular-toggle-switch/angular-toggle-switch.min.js",                                    "scripts/angular-toggle-switch/angular-toggle-switch.css"]                            }),                            $ocLazyLoad.load({                                name: 'ngAnimate',                                files: ['scripts/angular-animate.js']                            }),                            $ocLazyLoad.load({                                name: 'ngCookies',                                files: ['scripts/angular-cookies.js']                            }),                            $ocLazyLoad.load({                                name: 'ngResource',                                files: ['scripts/angular-resource.js']                            }),                            $ocLazyLoad.load({                                name: 'ngSanitize',                                files: ['scripts/angular-sanitize.js']                            }),                            $ocLazyLoad.load({                                name: 'ngTouch',                                files: ['scripts/angular-touch.js']                            })                    }                }            })            .state('dashboard.home', {                url: 'home',                templateUrl: 'dashboard/home.html',                resolve: {                    loadMyDirectives: function ($ocLazyLoad) {                        return $ocLazyLoad.load({                            name: 'app',                            files: [                                'directives/timeline/timeline.js',                                'directives/notifications/notifications.js',                                'directives/chat/chat.js',                                'directives/dashboard/stats/stats.js'                            ]                        })                    }                }            })            .state('dashboard.profile', {                url: 'profile',                templateUrl: 'profile/profile.html',                controller: 'ProfileCtrl',                controllerAs: 'vm'            })            .state('dashboard.account', {                url: 'account',                templateUrl: 'createNewAccount/userAccount.html',                controller: 'AccountCtrl',                controllerAs: 'vm'            })            .state('dashboard.report', {                url: 'report',                templateUrl: 'reportTemplateBuilder/reportBuilder.html',                controller: 'BuilderCtrl'            })            .state('dashboard.template', {                url: 'template',                templateUrl: 'templateType/templateType.html',                controller: 'TemplateCtrl',                controllerAs: 'vm'            })            .state('dashboard.nearmiss', {                url: 'nearmiss',                templateUrl: 'nearmissReport/nearmissReport.html',                controller: 'NearmissCtrl',                controllerAs: 'vm'            })            .state('dashboard.incident', {                url: 'incident',                templateUrl: 'incidentReport/incidentReport.html',                controller: 'IncidentCtrl',                controllerAs: 'vm'            })    }    function run($http, $rootScope, $window, formlyConfig) {        // add JWT token as default auth header        $http.defaults.headers.common['Authorization'] = 'Bearer ' + $window.jwtToken;        //  set datapicker and timepicker        function camelize(string) {            string = string.replace(/[\-_\s]+(.)?/g, function (match, chr) {                return chr ? chr.toUpperCase() : '';            });            // Ensure 1st char is always lowercase            return string.replace(/^([A-Z])/, function (match, chr) {                return chr ? chr.toLowerCase() : '';            });        }        var ngModelAttrs = {};        var attributes = [            'date-disabled',            'custom-class',            'show-weeks',            'starting-day',            'init-date',            'min-mode',            'max-mode',            'format-day',            'format-month',            'format-year',            'format-day-header',            'format-day-title',            'format-month-title',            'year-range',            'shortcut-propagation',            'datepicker-popup',            'show-button-bar',            'current-text',            'clear-text',            'close-text',            'close-on-date-selection',            'datepicker-append-to-body',            'meridians',            'readonly-input',            'mousewheel',            'arrowkeys'        ];        var bindings = [            'datepicker-mode',            'min-date',            'max-date',            'hour-step',            'minute-step',            'show-meridian'        ];        angular.forEach(attributes, function (attr) {            ngModelAttrs[camelize(attr)] = {attribute: attr};        });        angular.forEach(bindings, function (binding) {            ngModelAttrs[camelize(binding)] = {bound: binding};        });        formlyConfig.setType({            name: 'datepicker',            templateUrl: 'datepicker.html',            wrapper: ['bootstrapLabel', 'bootstrapHasError'],            defaultOptions: {                ngModelAttrs: ngModelAttrs,                templateOptions: {                    datepickerOptions: {                        format: 'MM.dd.yyyy',                        initDate: new Date()                    }                },                controller: ['$scope', function ($scope) {                    $scope.datepicker = {};                    $scope.datepicker.opened = false;                    $scope.datepicker.open = function ($event) {                        $scope.datepicker.opened = !$scope.datepicker.opened;                    };                }]            }        });        formlyConfig.setType({            name: 'timepicker',            template: '<timepicker ng-model="model[options.key]"></timepicker>',            wrapper: ['bootstrapLabel', 'bootstrapHasError'],            defaultOptions: {                ngModelAttrs: ngModelAttrs,                templateOptions: {                    datepickerOptions: {}                }            }        });    }    // manually bootstrap angular after the JWT token is retrieved from the server    $(function () {        // get JWT token from server        $.get('/app/token', function (token) {            window.jwtToken = token;            angular.bootstrap(document, ['app']);        });    });})();